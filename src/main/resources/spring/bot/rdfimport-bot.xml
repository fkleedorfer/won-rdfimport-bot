<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <import resource="classpath*:spring/component/nodeurisource/nodeurisource-random.xml"/>
    <import resource="classpath*:spring/component/botContext/botContext.xml"/>

    <context:property-placeholder location="file:${WON_CONFIG_DIR}/rdfimport-bot.properties" ignore-unresolvable="true"/>
    <context:property-placeholder location="file:${WON_CONFIG_DIR}/bot.properties" ignore-unresolvable="true"/>
    <context:property-placeholder location="file:${WON_CONFIG_DIR}/node-uri-source.properties" ignore-unresolvable="true"/>
    <context:property-placeholder location="file:${WON_CONFIG_DIR}/owner.properties" ignore-unresolvable="true"/>

    <bean id="rdfImportBot" class="won.rdfimport.RdfImportBot">

        <property name="targetInflightCount" value="${rdfimpor.bot.targetInflightCount}" />
        <property name="maxInflightCount" value="${rdfimpor.bot.maxInflightCount}" />

        <property name="botContextWrapper" ref="botContextWrapper" />
        <property name="taskScheduler" ref="taskScheduler" />
        <property name="needProducer" ref="needProducer" />
        <property name="connectionToCreateProducer">
            <bean class="won.rdfimport.connectionproducer.DirectoryBasedConnectionToCreateProducer">
                <property name="directory" value="${rdfimport.bot.importfolder.connections}" />
                <property name="filenameFilterRegex" value="^[^\.].+\.ttl" />
            </bean>
        </property>
    </bean>

    <bean id="needProducer" class="won.bot.framework.component.needproducer.impl.DirectoryBasedNeedProducer">
        <property name="directory" value="${rdfimport.bot.importfolder.needs}"/>
        <property name="filenameFilterRegex" value="^[^\.].*\.ttl"/>
        <property name="repeat" value="false"/>
        <property name="fileBasedNeedProducer">
            <bean class="won.bot.framework.component.needproducer.impl.TurtleFileNeedProducer"/>
        </property>
    </bean>

    <bean id="botContextWrapper" class="won.bot.framework.bot.context.BotContextWrapper">
        <constructor-arg name="botContext" value="${botContext.impl}"/>
        <constructor-arg name="needCreateListName" value="needs"/>
    </bean>
</beans>
